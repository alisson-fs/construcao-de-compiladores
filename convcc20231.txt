#CFG
#NonTerminals
PROGRAM | PROGRAMOPTS | FUNCLIST | FUNCLIST' | FUNCDEF | PARAMLIST | PARAMLISTOPTS | PARAMLISTOPTS' | PARAMTYPE | STATEMENT | VARDECL | INTCONSTRECR | INTCONSTRECR' | ATRIBSTAT | ATRIBOPTS | FUNCCALL | PARAMLISTCALL | PARAMLISTCALLOPTS | PARAMLISTCALLOPTS' | PRINTSTAT | READSTAT | RETURNSTAT | IFSTAT | IFSTATOPTS | FORSTAT | STATELIST | STATELISTOPTS | ALLOCEXPRESSION | ALLOCEXPRRECR | ALLOCEXPRRECR' | EXPRESSION | EXPRESSIONOPTS | COMPARESIGNS | NUMEXPRESSION | NUMEXPRESSRECR | NUMEXPRESSRECR' | ADDSIGNS | TERM | TERMRECR | TERMRECR' | MULTSIGNS | UNARYEXPR | UNARYEXPROPTS | FACTOR | LVALUE | LVALUERECR | LVALUERECR'
#Terminals
int | float | string | ident | print | read | return | if | for | break | ; | def | , | ( | ) | [ | ] | { | } | + | - | new | else | < | > | <= | >= | == | != | = | * | / | % | null | int_constant | float_constant | string_constant
#InitialSymbol
PROGRAM
#Productions
PROGRAM -> PROGRAMOPTS
PROGRAM -> &
PROGRAMOPTS -> STATEMENT
PROGRAMOPTS -> FUNCLIST
FUNCLIST -> FUNCDEFFUNCLIST'
FUNCLIST' -> FUNCLIST
FUNCLIST' -> &
FUNCDEF -> defident(PARAMLIST){STATELIST}
PARAMLIST -> PARAMLISTOPTS
PARAMLIST -> &
PARAMLISTOPTS -> PARAMTYPEidentPARAMLISTCALLOPTS'
PARAMLISTOPTS' -> ,PARAMLIST
PARAMLISTOPTS' -> &
PARAMTYPE -> int
PARAMTYPE -> float
PARAMTYPE -> string
STATEMENT -> VARDECL;
STATEMENT -> ATRIBSTAT;
STATEMENT -> PRINTSTAT;
STATEMENT -> READSTAT;
STATEMENT -> RETURNSTAT;
STATEMENT -> IFSTAT
STATEMENT -> FORSTAT
STATEMENT -> {STATELIST}
STATEMENT -> break;
STATEMENT -> ;
VARDECL -> PARAMTYPEidentINTCONSTRECR
INTCONSTRECR -> &
INTCONSTRECR -> [int_constant]INTCONSTRECR'
INTCONSTRECR' -> INTCONSTRECR
INTCONSTRECR' -> &
ATRIBSTAT -> LVALUE=ATRIBOPTS
ATRIBOPTS -> EXPRESSION
ATRIBOPTS -> ALLOCEXPRESSION
ATRIBOPTS -> FUNCCALL
FUNCCALL -> callident(PARAMLISTCALL)
PARAMLISTCALL -> PARAMLISTCALLOPTS
PARAMLISTCALL -> &
PARAMLISTCALLOPTS -> identPARAMLISTCALLOPTS'
PARAMLISTCALLOPTS' -> ,PARAMLISTCALL
PARAMLISTCALLOPTS' -> &
PRINTSTAT -> printEXPRESSION
READSTAT -> readLVALUE
RETURNSTAT -> return
IFSTAT -> if(EXPRESSION){STATELIST}IFSTATOPTS
IFSTATOPTS -> else{STATELIST}
IFSTATOPTS -> &
FORSTAT -> for(ATRIBSTAT;EXPRESSION;ATRIBSTAT)STATEMENT
STATELIST -> STATEMENTSTATELISTOPTS
STATELISTOPTS -> STATELIST
STATELISTOPTS -> &
ALLOCEXPRESSION -> newPARAMTYPEALLOCEXPRRECR
ALLOCEXPRRECR -> [NUMEXPRESSION]ALLOCEXPRRECR'
ALLOCEXPRRECR' -> ALLOCEXPRRECR
ALLOCEXPRRECR' -> &
EXPRESSION -> NUMEXPRESSIONEXPRESSIONOPTS
EXPRESSIONOPTS -> COMPARESIGNSNUMEXPRESSION
EXPRESSIONOPTS -> &
COMPARESIGNS -> <
COMPARESIGNS -> >
COMPARESIGNS -> <=
COMPARESIGNS -> >=
COMPARESIGNS -> ==
COMPARESIGNS -> !=
NUMEXPRESSION -> TERMNUMEXPRESSRECR
NUMEXPRESSRECR -> ADDSIGNSTERMNUMEXPRESSRECR'
NUMEXPRESSRECR -> &
NUMEXPRESSRECR' -> NUMEXPRESSRECR
NUMEXPRESSRECR' -> &
ADDSIGNS -> +
ADDSIGNS -> -
TERM -> UNARYEXPRTERMRECR
TERMRECR -> MULTSIGNSUNARYEXPRTERMRECR'
TERMRECR -> &
TERMRECR' -> TERMRECR
TERMRECR' -> &
MULTSIGNS -> *
MULTSIGNS -> /
MULTSIGNS -> %
UNARYEXPR -> UNARYEXPROPTSFACTOR
UNARYEXPROPTS -> ADDSIGNS
UNARYEXPROPTS -> &
FACTOR -> int_constant
FACTOR -> float_constant
FACTOR -> string_constant
FACTOR -> null
FACTOR -> LVALUE
FACTOR -> (NUMEXPRESSION)
LVALUE -> identLVALUERECR
LVALUERECR -> [NUMEXPRESSION]LVALUERECR'
LVALUERECR -> &
LVALUERECR' -> LVALUERECR
LVALUERECR' -> &